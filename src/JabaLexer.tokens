T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
T__6=7
T__7=8
T__8=9
T__9=10
T__10=11
T__11=12
T__12=13
T__13=14
T__14=15
T__15=16
T__16=17
T__17=18
T__18=19
T__19=20
T__20=21
T__21=22
T__22=23
T__23=24
T__24=25
T__25=26
T__26=27
T__27=28
T__28=29
T__29=30
T__30=31
T__31=32
T__32=33
T__33=34
T__34=35
T__35=36
T__36=37
T__37=38
ABSTRACT=39
ASSERT=40
BOOLEAN=41
BREAK=42
BYTE=43
CASE=44
CATCH=45
CHAR=46
CLASS=47
CONST=48
CONTINUE=49
DEFAULT=50
DO=51
DOUBLE=52
ELSE=53
ENUM=54
EXTENDS=55
FINAL=56
FINALLY=57
FLOAT=58
FOR=59
IF=60
GOTO=61
IMPLEMENTS=62
IMPORT=63
INSTANCEOF=64
INT=65
INTERFACE=66
LONG=67
NATIVE=68
NEW=69
PACKAGE=70
PRIVATE=71
PROTECTED=72
PUBLIC=73
RETURN=74
SHORT=75
STATIC=76
STRICTFP=77
SUPER=78
SWITCH=79
SYNCHRONIZED=80
THIS=81
THROW=82
THROWS=83
TRANSIENT=84
TRY=85
VOID=86
VOLATILE=87
WHILE=88
IntegerLiteral=89
FloatingPointLiteral=90
BooleanLiteral=91
CharacterLiteral=92
StringLiteral=93
NullLiteral=94
LPAREN=95
RPAREN=96
LBRACE=97
RBRACE=98
LBRACK=99
RBRACK=100
SEMI=101
COMMA=102
DOT=103
ASSIGN=104
GT=105
LT=106
BANG=107
TILDE=108
QUESTION=109
COLON=110
EQUAL=111
LE=112
GE=113
NOTEQUAL=114
AND=115
OR=116
INC=117
DEC=118
ADD=119
SUB=120
MUL=121
DIV=122
BITAND=123
BITOR=124
CARET=125
MOD=126
ADD_ASSIGN=127
SUB_ASSIGN=128
MUL_ASSIGN=129
DIV_ASSIGN=130
AND_ASSIGN=131
OR_ASSIGN=132
XOR_ASSIGN=133
MOD_ASSIGN=134
LSHIFT_ASSIGN=135
RSHIFT_ASSIGN=136
URSHIFT_ASSIGN=137
Identifier=138
AT=139
ELLIPSIS=140
WS=141
COMMENT=142
LINE_COMMENT=143
'cchar'=1
'bbyte'=2
'sshort'=3
'iint'=4
'llong'=5
'ffloat'=6
'ddouble'=7
'bboolean'=8
'chhar'=9
'byyte'=10
'shhort'=11
'innt'=12
'loong'=13
'flloat'=14
'doouble'=15
'booolean'=16
'chaar'=17
'shoort'=18
'intt'=19
'lonng'=20
'flooat'=21
'douuble'=22
'boollean'=23
'charr'=24
'bytee'=25
'shorrt'=26
'longg'=27
'floaat'=28
'doubble'=29
'booleean'=30
'shortt'=31
'floatt'=32
'doublle'=33
'booleaan'=34
'doublee'=35
'booleann'=36
'this.'=37
'**'=38
'abstract'=39
'assert'=40
'boolean'=41
'break'=42
'byte'=43
'case'=44
'catch'=45
'char'=46
'class'=47
'const'=48
'continue'=49
'default'=50
'do'=51
'double'=52
'else'=53
'enum'=54
'extends'=55
'final'=56
'finally'=57
'float'=58
'for'=59
'if'=60
'goto'=61
'implements'=62
'import'=63
'instanceof'=64
'int'=65
'interface'=66
'long'=67
'native'=68
'new'=69
'package'=70
'private'=71
'protected'=72
'public'=73
'return'=74
'short'=75
'static'=76
'strictfp'=77
'super'=78
'switch'=79
'synchronized'=80
'this'=81
'throw'=82
'throws'=83
'transient'=84
'try'=85
'void'=86
'volatile'=87
'while'=88
'null'=94
'('=95
')'=96
'{'=97
'}'=98
'['=99
']'=100
';'=101
','=102
'.'=103
'='=104
'>'=105
'<'=106
'!'=107
'~'=108
'?'=109
':'=110
'=='=111
'<='=112
'>='=113
'!='=114
'&&'=115
'||'=116
'++'=117
'--'=118
'+'=119
'-'=120
'*'=121
'/'=122
'&'=123
'|'=124
'^'=125
'%'=126
'+='=127
'-='=128
'*='=129
'/='=130
'&='=131
'|='=132
'^='=133
'%='=134
'<<='=135
'>>='=136
'>>>='=137
'@'=139
'...'=140
